<?xml version="1.0"?>
<ZopeData>
  <record id="1" aka="AAAAAAAAAAE=">
    <pickle>
      <global name="PythonScript" module="Products.PythonScripts.PythonScript"/>
    </pickle>
    <pickle>
      <dictionary>
        <item>
            <key> <string>Script_magic</string> </key>
            <value> <int>3</int> </value>
        </item>
        <item>
            <key> <string>_bind_names</string> </key>
            <value>
              <object>
                <klass>
                  <global name="NameAssignments" module="Shared.DC.Scripts.Bindings"/>
                </klass>
                <tuple/>
                <state>
                  <dictionary>
                    <item>
                        <key> <string>_asgns</string> </key>
                        <value>
                          <dictionary>
                            <item>
                                <key> <string>name_container</string> </key>
                                <value> <string>container</string> </value>
                            </item>
                            <item>
                                <key> <string>name_context</string> </key>
                                <value> <string>context</string> </value>
                            </item>
                            <item>
                                <key> <string>name_m_self</string> </key>
                                <value> <string>script</string> </value>
                            </item>
                            <item>
                                <key> <string>name_subpath</string> </key>
                                <value> <string>traverse_subpath</string> </value>
                            </item>
                          </dictionary>
                        </value>
                    </item>
                  </dictionary>
                </state>
              </object>
            </value>
        </item>
        <item>
            <key> <string>_body</string> </key>
            <value> <string encoding="cdata"><![CDATA[

from Products.ZSQLCatalog.SQLCatalog import Query, ComplexQuery\n
computer = state_change[\'object\']\n
# Get required arguments\n
kwargs = state_change.kwargs\n
software_release_url = state_change.kwargs["software_release_url"]\n
\n
portal = computer.getPortalObject()\n
\n
\n
# Only get one software release\n
software_release_document_result = portal.portal_catalog(\n
  portal_type=\'Software Release\', # validation_state=(\'shared\', \'released\', \'published\', \'shared_alive\', \'released_alive\', \'published_alive\'),\n
  url_string=software_release_url, limit=2)\n
if len(software_release_document_result) != 1:\n
  raise ValueError("No software release found for %s %s" % (computer.getRelativeUrl(), software_release_url))\n
else:\n
  software_release_document = software_release_document_result[0]\n
\n
tag = \'Computer_%s_software_release_%s_change\' % (computer.getUid(), software_release_document.getUid())\n
if portal.portal_activities.countMessageWithTag(tag) > 0:\n
  raise NotImplementedError(\'In progress\')\n
activate_kw = {\'tag\': tag}\n
\n
state_list = []\n
state_list.extend(portal.getPortalReservedInventoryStateList())\n
state_list.extend(portal.getPortalTransitInventoryStateList())\n
state_list.extend([\'stopped\', \'delivered\'])\n
\n
current_delivery_line = portal.portal_catalog.getResultValue(\n
  portal_type=\'Purchase Packing List Line\',\n
  simulation_state=state_list,\n
  default_resource_uid=[\n
    portal.restrictedTraverse(portal.portal_preferences.getPreferredSoftwareCleanupResource()).getUid(),\n
    portal.restrictedTraverse(portal.portal_preferences.getPreferredSoftwareSetupResource()).getUid(),\n
  ],\n
  sort_on=((\'movement.start_date\', \'DESC\'),),\n
  aggregate_relative_url=ComplexQuery(\n
    Query(aggregate_relative_url=software_release_document.getRelativeUrl()),\n
    Query(aggregate_relative_url=computer.getRelativeUrl()),\n
    operator="AND"),\n
  limit=1\n
)\n
\n
if current_delivery_line is not None and current_delivery_line.getResourceUid() == service_uid and current_delivery_line.getSimulationState() != \'delivered\':\n
  # change installation in progress\n
  return\n
\n
# XXX Hardcoded values\n
person = portal.ERP5Site_getAuthenticatedMemberPersonValue()\n
\n
packing_list_portal_type = "Purchase Packing List"\n
module = portal.getDefaultModule(portal_type=packing_list_portal_type)\n
packing_list = module.newContent(\n
  portal_type=packing_list_portal_type,\n
  start_date=DateTime(),\n
  destination_value=person,\n
  destination_section_value=person,\n
  destination_decision_value=person,\n
  source_administration_value=person,\n
  # XXX Hardcoded values\n
  source="organisation_module/vifib_internet",\n
  source_section="organisation_module/vifib_internet",\n
  price_currency="currency_module/EUR",\n
  activate_kw=activate_kw\n
)\n
packing_list.newContent(\n
  portal_type="Purchase Packing List Line",\n
  resource_uid=service_uid,\n
  aggregate_value_list=[software_release_document, computer],\n
  quantity=1,\n
  activate_kw=activate_kw\n
)\n
\n
packing_list.confirm(activate_kw=activate_kw)\n
packing_list.startBuilding()\n


]]></string> </value>
        </item>
        <item>
            <key> <string>_params</string> </key>
            <value> <string>state_change, service_uid</string> </value>
        </item>
        <item>
            <key> <string>id</string> </key>
            <value> <string>Computer_requestSoftwareReleaseChange</string> </value>
        </item>
      </dictionary>
    </pickle>
  </record>
</ZopeData>
